buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.saantiaguilera.gradle.publish.helper:core:3.0.0'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.saantiaguilera.gradle.publish.helper'

group = 'com.fsryan.gradle.autosemver'
version = '0.0.3'

subprojects {
    apply plugin: 'groovy'
    apply plugin: 'maven'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'
    apply plugin: 'jacoco'

    repositories {
        jcenter()
    }

    group = rootProject.group
    version = rootProject.version

    jacoco {
        toolVersion = "0.7.6.+"
    }

    task jacocoReport(type: JacocoReport, dependsOn: 'test') {
        group = 'Reporting'
        description = 'Generate Jacoco coverage reports after running tests.'

        executionData = files('build/jacoco/test.exec')
        sourceDirectories = files('src/main/groovy')
        classDirectories = fileTree(
                dir: 'build/classes',
                excludes: [
                        '**/*Test.class'
                ]
        )

        reports {
            xml.enabled true
            csv.enabled false
            html.enabled = true
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    publishing {
        publications {
            maven(MavenPublication) {
                groupId = rootProject.group
                artifactId = project.name
                version = rootProject.version
                from components.java
            }
            bintray(MavenPublication) {
                groupId = rootProject.group
                artifactId = project.name
                version = rootProject.version
                from components.java
            }
        }
    }

    model {
        tasks.generatePomFileForBintrayPublication {
            doFirst {
                file("$buildDir/poms").mkdirs()
            }
            destination = file("$buildDir/poms/pom-default.xml")
        }
    }

    afterEvaluate {
        tasks.findByName('publishModule').dependsOn('test')
        tasks.findByName('bintrayUpload').dependsOn('generatePomFileForBintrayPublication')
    }
}

publishGlobalConfigurations {
    groupId = rootProject.group
    versionName = rootProject.version

    artifactsMappings = [
            'core' : "${rootProject.name}-core",
            'git' : "${rootProject.name}-git"
    ]

    bintrayRepository = 'maven'

    githubUrl = "https://github.com/ryansgot/autosemver"

    bintrayUser = project.hasProperty('bintrayUser') ? project.getProperty('bintrayUser') : ''
    bintrayApiKey = project.hasProperty('bintrayApiKey') ? project.getProperty('bintrayApiKey') : ''

    licenseUrl = "http://www.opensource.org/licenses/MIT"
    licenseName = "MIT"
}